准备：
此项目为一个前后台分离的后台管理的spa，包括前端pc应用和后端应用
包括用户管理/商品分类管理/商品管理/权限管理等功能模块
前端：使用react，antd，axios,es6,webpack
后端：node+express+mongodb
采用模块化，组件化，工程化

前台数据展现/交互/组件化：
react/react-route-dom
redux
antd

后台项目node multer blueimp-md5  mongodb
mongoose


前台后交互  ajax请求：axios jsonp promise/async/await
接口测试工具：postman

模块化es6，commonjs

项目构建/工程化 webpack creat-react-app
eslint

其他：富文本编程器：react-draft-wsysiwyg
draft-js
draftjs-to-html

图表库：echarts  echarts-for-react

全称：前后台交互ａｐｉ接口

接口文档

ａｐｉ接口
接口文档
测试接口
对接口
调接口
联调
前后台分离
ｍｏｃｋ数据

接口文档：
1，登陆，
2，添加用户
3，更新用户
4，获取所有用户列表
5，删除用户
6，获取一级或某个二级分类列表
7，添加分类
8，更新品类名称
9，根据分类id获取分类
10，获取商品分页列表
11，根据id/name搜索产品分页列表
12，添加商品
13，更新商品
14，对商品进行上架/下架处理
15，上传图片
16，删除图片
17，添加角色
18，获取角色列表
19，更新角色（给角色设置权限）
20，获取天气信息


1，登陆，请求url:
localhost:5000/login
（post)
username password


　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　５，可以学习到：
create-react-app初始化react
node+express+mongoose+mongodb搭建后台应用

react插件或第三方库
react-router-dom开发单页应用
redux+react-redux+redux-thunk管理应用组件状态
掌握实用axios/jsonp与后台进行数据交互

掌握实用antd组件库构建界面
学会使用echarts/bizcharts实现数据可视话展现
学会使用react-draft-wysiwyg实现富文本编辑器

印象笔记：
yarm命令文档
npm命令文档
git参考手册

开启项目开发
使用create-react-app（脚手架）
npm install -g create-react-app:全局下载工具
create-react-app react-admin:下载模板项目
cd react-admin
npm start
localhost:3000


　　项目前端源码目录设计
src:(项目前端源码目录设计）

api  ajax请求相关

assets 公用路由组件

components 非路由组件

config 配置

pages:路由组件

utils  工具模块文件夹
index。js入口js
app.js  应用根组件

http://localhost:3000/
 
npm install -g yarn
yarn add antd  下载组件库包
yarn add react-app-rewired customize-cra babel-plugin-import
yarn add less less-loader


引入路由
yarn add react-router-dom



